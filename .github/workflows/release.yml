# .github/workflows/release.yml
name: Release UF2 (picotool)

on:
  push:
    tags:
      - "*"   # only run on tags

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install Rust (stable) with RP2040 target
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: thumbv6m-none-eabi

      - name: Install flip-link
        run: cargo install flip-link

      - name: Install picotool (prebuilt binary)
        run: |
          # Download the latest picotool for Linux x86_64
          TAR_URL=$(curl -s https://api.github.com/repos/raspberrypi/pico-sdk-tools/releases/latest | jq -r '.assets[] | select(.name | contains("picotool") and contains("x86_64-lin.tar.gz")) | .browser_download_url')
          echo "Download URL: $TAR_URL"
          wget -O picotool.tar.gz "$TAR_URL"
          
          # Extract and install picotool
          tar -xzf picotool.tar.gz
          sudo cp picotool/picotool /usr/local/bin/
          sudo chmod +x /usr/local/bin/picotool
          
          # Verify installation
          picotool version

      - name: Build Pico firmware (release)
        run: cargo build --release --target thumbv6m-none-eabi --features pico

      - name: Build XIAO firmware (release)
        run: cargo build --release --target thumbv6m-none-eabi --features xiao

      - name: Convert ELF → UF2 for Pico
        run: |
          TAG_NAME="${GITHUB_REF#refs/tags/}"
          ELF_FILE="target/thumbv6m-none-eabi/release/neontap_pico"
          UF2_FILE="neontap_pico_${TAG_NAME}.uf2"
          picotool uf2 convert "$ELF_FILE" -t elf "$UF2_FILE"
          echo "PICO_UF2_FILE=$UF2_FILE" >> $GITHUB_ENV

      - name: Convert ELF → UF2 for XIAO
        run: |
          TAG_NAME="${GITHUB_REF#refs/tags/}"
          ELF_FILE="target/thumbv6m-none-eabi/release/neontap_xiao"
          UF2_FILE="neontap_xiao_${TAG_NAME}.uf2"
          picotool uf2 convert "$ELF_FILE" -t elf "$UF2_FILE"
          echo "XIAO_UF2_FILE=$UF2_FILE" >> $GITHUB_ENV

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          files: |
            ${{ env.PICO_UF2_FILE }}
            ${{ env.XIAO_UF2_FILE }}
          name: ${{ github.ref_name }}
          tag_name: ${{ github.ref_name }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
